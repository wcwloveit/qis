<?xml version="1.0" encoding="UTF-8"?>
<!--创建人:汪震-->
<!--创建时间:20180813-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinri.dao.user.SysUserMapper">
	<resultMap id="sysUserResultMap" type="com.xinri.po.user.SysUser">
		   <id column="ID" property="id" jdbcType="BIGINT"/>
	      	<result column="AVATAR" property="avatar" jdbcType="VARCHAR"/>
	      	<result column="ACCOUNT" property="account" jdbcType="VARCHAR"/>
	      	<result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
	      	<result column="SALT" property="salt" jdbcType="VARCHAR"/>
	      	<result column="NAME" property="name" jdbcType="VARCHAR"/>
	      	<result column="BIRTHDAY" property="birthday" jdbcType="TIMESTAMP"/>
	      	<result column="SEX" property="sex" jdbcType="INTEGER"/>
	      	<result column="EMAIL" property="email" jdbcType="VARCHAR"/>
	      	<result column="PHONE" property="phone" jdbcType="VARCHAR"/>
	      	<result column="ROLEID" property="roleid" jdbcType="VARCHAR"/>
	      	<result column="DEPTID" property="deptid" jdbcType="BIGINT"/>
	      	<result column="STATUS" property="status" jdbcType="INTEGER"/>
	      	<result column="CREATETIME" property="createtime" jdbcType="TIMESTAMP"/>
	      	<result column="VERSION" property="version" jdbcType="INTEGER"/>
			<result column="IS_DELETED" property="isDeleted" jdbcType="INTEGER"/>
	</resultMap>

    <!-- 列定义 -->
	<sql id="sysUserColumns">
	  t.ID,
	  t.AVATAR,
	  t.ACCOUNT,
	  t.PASSWORD,
	  t.SALT,
	  t.NAME,
	  t.BIRTHDAY,
	  t.SEX,
	  t.EMAIL,
	  t.PHONE,
	  t.ROLEID,
	  t.DEPTID,
	  t.STATUS,
	  t.CREATETIME,
	  t.VERSION,
	  t.IS_DELETED
  	</sql>

    <!-- 查询条件SQL -->
	<sql id="whereColumnBySelect">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="id != null">
				AND t.ID = #{id}
			</if>
			<if test="avatar != null and avatar !=''">
				AND t.AVATAR = #{avatar}
			</if>
			<if test="account != null and account !=''">
				AND t.ACCOUNT = #{account}
			</if>
			<if test="password != null and password !=''">
				AND t.PASSWORD = #{password}
			</if>

			<if test="salt != null and salt !=''">
				AND t.SALT = #{salt}
			</if>

			<if test="name != null and name !=''">
				AND t.NAME = #{name}
			</if>

			<!--<if test="startBirthday != null and startBirthday !=''">-->
				<!--AND <![CDATA[ t.BIRTHDAY >=str_to_date(concat(#{startBirthday},'00:00:00'),'%Y-%m-%d %T')]]>-->
			<!--</if>-->
			<!--<if test="endBirthday != null and endBirthday !=''">-->
				<!--AND <![CDATA[ t.BIRTHDAY <= str_to_date(concat(#{endBirthday}||' 23:59:59','00:00:00'),'%Y-%m-%d %T')]]>-->
			<!--</if>-->

			<if test="sex != null">
				AND t.SEX = #{sex}
			</if>
			<if test="email != null and email !=''">
				AND t.EMAIL = #{email}
			</if>

			<if test="phone != null and phone !=''">
				AND t.PHONE = #{phone}
			</if>
			<if test="roleid != null and roleid !=''">
				AND t.ROLEID = #{roleid}
			</if>

			<if test="deptid != null">
				AND t.DEPTID = #{deptid}
			</if>

			<if test="status != null">
				AND t.STATUS = #{status}
			</if>
			<!--<if test="startCreatetime != null and startCreatetime !=''">-->
				<!--AND <![CDATA[ t.CREATETIME >=str_to_date(concat(#{startCreatetime},'00:00:00'),'%Y-%m-%d %T')]]>-->
			<!--</if>-->
			<!--<if test="endCreatetime != null and endCreatetime !=''">-->
				<!--AND <![CDATA[ t.CREATETIME <= str_to_date(concat(#{endCreatetime}||' 23:59:59','00:00:00'),'%Y-%m-%d %T')]]>-->
			<!--</if>-->
			<if test="isDeleted != null">
				AND t.IS_DELETED = #{isDeleted}
			</if>
			<!--<if test="startBirth != null and startBirth !=''">-->
				<!--AND <![CDATA[ t.BIRTHDAY >= str_to_date(concat(#{startBirth},'00:00:00'),'%Y-%m-%d %T')]]>-->
			<!--</if>-->
			<!--<if test="endBirth != null and endBirth !=''">-->
				<!--AND <![CDATA[ t.BIRTHDAY <= str_to_date(concat(#{endBirth},'23:59:59'),'%Y-%m-%d %T')]]>-->
			<!--</if>-->
			<if test="version != null">
				AND t.VERSION = #{version}
			</if>

		</trim>
	</sql>

    <!-- 修改字段SQL -->
	<sql id="whereColumnByUpdate">
		<trim prefix="SET" suffixOverrides=",">
			<if test="id != null">
			t.ID = #{id},
			</if>

			<if test="avatar != null">
			t.AVATAR = #{avatar},
			</if>
			<if test="account != null">
			t.ACCOUNT = #{account},
			</if>

			<if test="password != null">
			t.PASSWORD = #{password},
			</if>
			<if test="salt != null">
			t.SALT = #{salt},
			</if>

			<if test="name != null">
			t.NAME = #{name},
			</if>
			<if test="birthday != null">
			t.BIRTHDAY = #{birthday},
			</if>

			<if test="sex != null">
			t.SEX = #{sex},
			</if>
			<if test="email != null">
			t.EMAIL = #{email},
			</if>

			<if test="phone != null">
			t.PHONE = #{phone},
			</if>
			<if test="roleid != null">
			t.ROLEID = #{roleid},
			</if>

			<if test="deptid != null">
			t.DEPTID = #{deptid},
			</if>

			<if test="status != null">
			t.STATUS = #{status},
			</if>
			<if test="createtime != null">
			t.CREATETIME = #{createtime},
			</if>

			<if test="version != null">
			t.VERSION = #{version},
			</if>
		</trim>
	</sql>

    <!-- 根据主键ID获取数据 -->
	<select id="get" parameterType="com.xinri.po.user.SysUser" resultMap="sysUserResultMap">
		SELECT <include refid="sysUserColumns" /> 
		FROM SYS_USER t 
		WHERE t.ID = #{id}
	</select>
    <!-- 查询列表可以根据分页进行查询 -->
	<select id="findList" parameterType="com.xinri.po.user.SysUser" resultMap="sysUserResultMap">
		SELECT
		<include refid="sysUserColumns" /> 
		FROM SYS_USER t 
		<include refid="whereColumnBySelect" />
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}			
			</when>
				<otherwise>
				ORDER BY t.ID DESC
				</otherwise>
			
		</choose>
	</select>

    <!-- 查询所有列表 -->
	<select id="findAllList" parameterType="com.xinri.po.user.SysUser" resultMap="sysUserResultMap">
		SELECT
		<include refid="sysUserColumns" /> 
		FROM SYS_USER t 	
		<include refid="whereColumnBySelect" />
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}			
			</when>
				<otherwise>
				ORDER BY  t.ID DESC
				</otherwise>
			
		</choose>
		
		
	</select>

    <!-- 根据条件查询对象 -->
	<select id="getByEntity" parameterType="com.xinri.po.user.SysUser" resultMap="sysUserResultMap">
		SELECT <include refid="sysUserColumns" /> 
		FROM SYS_USER t 
		<include refid="whereColumnBySelect"></include>
	</select>
	
    <!-- 新增并设置主键ID至参数对象 -->
	<insert id="insert" parameterType="com.xinri.po.user.SysUser">

		INSERT INTO SYS_USER
			(ID,  AVATAR, ACCOUNT, PASSWORD, SALT,  NAME, BIRTHDAY,  SEX, EMAIL,  PHONE, ROLEID,  DEPTID, STATUS, CREATETIME,VERSION)
		VALUES
			(#{id}, #{avatar}, #{account},  #{password}, #{salt},  #{name}, #{birthday},#{sex}, #{email},  #{phone}, #{roleid},  #{deptid}, #{status},  #{createtime},  #{version})
	</insert>
    <!-- 新增并设置主键ID判断哪些列不为空时，则进行插入 -->
	<insert id="insertSelective" parameterType="com.xinri.po.user.SysUser" useGeneratedKeys="true" keyProperty="id" >
		
	    INSERT INTO SYS_USER
	    <trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null">
				ID,
			</if>

			<if test="avatar != null">
				AVATAR,
			</if>
			<if test="account != null">
				ACCOUNT,
			</if>

			<if test="password != null">
				PASSWORD,
			</if>
			<if test="salt != null">
				SALT,
			</if>

			<if test="name != null">
				NAME,
			</if>
			<if test="birthday != null">
				BIRTHDAY,
			</if>

			<if test="sex != null">
				SEX,
			</if>
			<if test="email != null">
				EMAIL,
			</if>

			<if test="phone != null">
				PHONE,
			</if>
			<if test="roleid != null">
				ROLEID,
			</if>

			<if test="deptid != null">
				DEPTID,
			</if>
			<if test="status != null">
				STATUS,
			</if>

			<if test="createtime != null">
				CREATETIME,
			</if>

			<if test="version != null">
				VERSION,
			</if>
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="id != null">
				#{id,jdbcType=INTEGER},
		  </if>

		  <if test="avatar != null">
				#{avatar,jdbcType=VARCHAR},
		  </if>

		  <if test="account != null">
				#{account,jdbcType=VARCHAR},
		  </if>

		  <if test="password != null">
				#{password,jdbcType=VARCHAR},
		  </if>

		  <if test="salt != null">
				#{salt,jdbcType=VARCHAR},
		  </if>

		  <if test="name != null">
				#{name,jdbcType=VARCHAR},
		  </if>

		  <if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
		  </if>
		  <if test="sex != null">
				#{sex,jdbcType=INTEGER},
		  </if>

		  <if test="email != null">
				#{email,jdbcType=VARCHAR},
		  </if>

		  <if test="phone != null">
				#{phone,jdbcType=VARCHAR},
		  </if>
		  <if test="roleid != null">
				#{roleid,jdbcType=VARCHAR},
		  </if>

		  <if test="deptid != null">
				#{deptid,jdbcType=BIGINT},
		  </if>
		  <if test="status != null">
				#{status,jdbcType=INTEGER},
		  </if>

		  <if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
		  </if>

		  <if test="version != null">
				#{version,jdbcType=INTEGER},
		  </if>
	    </trim>
  	</insert>

    <!-- 根据主键ID进行修改 -->
  	<update id="update" parameterType="com.xinri.po.user.SysUser">
		UPDATE SYS_USER t 
		<include refid="whereColumnByUpdate"></include>
		<where>
			t.ID = #{id,jdbcType=INTEGER}
		</where>
	</update>

    <!-- 根据条件进行修改 -->
	<update id="updateByCondition" parameterType="com.xinri.po.user.SysUser">
		UPDATE SYS_USER t 
		<include refid="whereColumnByUpdate"></include>
		<where>${whereSqlParam}</where>
	</update>

    <!-- 根据主键ID进行逻辑删除 -->
	<update id="delete" parameterType="com.xinri.po.user.SysUser">
		UPDATE SYS_USER t SET 
		t.IS_DELETED = 1
		WHERE t.ID = #{id,jdbcType=INTEGER}
	</update>

    <!-- 根据主键ID进行批量逻辑删除 -->
	<update id="batchDelete" parameterType="java.util.List">
		UPDATE SYS_USER t SET 
		t.IS_DELETED = 1
		WHERE t.ID IN
		<foreach item="item" collection="list" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</update>

    <!-- 根据条件进行逻辑删除 -->
	<update id="deleteByEntity" parameterType="com.xinri.po.user.SysUser">
		UPDATE SYS_USER t SET 
			t.IS_DELETED = 1
		<include refid="whereColumnBySelect"/>
	</update>

    <!-- 根据主键ID进行物理删除 -->
	<delete id="remove" parameterType="com.xinri.po.user.SysUser">
		DELETE FROM SYS_USER t 
		WHERE t.ID = #{id,jdbcType=INTEGER}
	</delete>

    <!-- 根据主键ID进行批量物理删除 -->
	<delete id="batchRemove" parameterType="java.util.List">
		DELETE FROM SYS_USER t 
		WHERE t.ID IN
		<foreach item="item" collection="list" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

    <!-- 根据条件进行物理删除 -->
	<update id="removeByCondition" parameterType="com.xinri.po.user.SysUser">
		DELETE FROM SYS_USER t 
		<where>${whereSqlParam}</where>
	</update>

	<resultMap id="sysUserResultVoMap" type="com.xinri.vo.users.SysUserVo" extends="sysUserResultMap">
		<result column="DEPT_NAME" property="dept" jdbcType="VARCHAR"/>
		<result column="ROLE_NAME" property="role" jdbcType="VARCHAR"/>
	</resultMap>
	<!--列表-->
	<select id="findListByVo" parameterType="com.xinri.vo.users.SysUserVo" resultMap="sysUserResultVoMap">
		SELECT
		<include refid="sysUserColumns" />,d.NAME DEPT_NAME,r.NAME ROLE_NAME
		FROM SYS_USER t
		LEFT JOIN DEPARTMENTS d ON t.DEPTID=d.ID
		LEFT JOIN ROLES r ON t.ROLEID=r.ID
		<include refid="whereColumnBySelect" />
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY t.ID DESC
			</otherwise>
		</choose>
	</select>
</mapper>